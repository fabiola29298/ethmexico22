"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestCreateFromContract__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "registry",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "create",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "tables",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620018d4380380620018d48339810160408190526200003491620001e9565b604080518082018252601681527f5465737443726561746546726f6d436f6e7472616374000000000000000000006020808301918252835180850190945260038452624d544b60e81b908401528151919291620000949160009162000143565b508051620000aa90600190602084019062000143565b505050620000c7620000c1620000ed60201b60201c565b620000f1565b600880546001600160a01b0319166001600160a01b039290921691909117905562000256565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001519062000219565b90600052602060002090601f016020900481019282620001755760008555620001c0565b82601f106200019057805160ff1916838001178555620001c0565b82800160010185558215620001c0579182015b82811115620001c0578251825591602001919060010190620001a3565b50620001ce929150620001d2565b5090565b5b80821115620001ce5760008155600101620001d3565b600060208284031215620001fb578081fd5b81516001600160a01b038116811462000212578182fd5b9392505050565b600181811c908216806200022e57607f821691505b602082108114156200025057634e487b7160e01b600052602260045260246000fd5b50919050565b61166e80620002666000396000f3fe6080604052600436106101095760003560e01c80638322cb6611610095578063b6a46b3b11610064578063b6a46b3b146102ed578063b88d4fde14610300578063c87b56dd14610320578063e985e9c514610340578063f2fde38b1461038957600080fd5b80638322cb66146102625780638da5cb5b1461029a57806395d89b41146102b8578063a22cb465146102cd57600080fd5b806323b872dd116100dc57806323b872dd146101bf57806342842e0e146101df5780636352211e146101ff57806370a082311461021f578063715018a61461024d57600080fd5b806301ffc9a71461010e57806306fdde0314610143578063081812fc14610165578063095ea7b31461019d575b600080fd5b34801561011a57600080fd5b5061012e61012936600461123c565b6103a9565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b506101586103fb565b60405161013a9190611454565b34801561017157600080fd5b506101856101803660046112ba565b61048d565b6040516001600160a01b03909116815260200161013a565b3480156101a957600080fd5b506101bd6101b8366004611213565b6104b4565b005b3480156101cb57600080fd5b506101bd6101da366004611125565b6105cf565b3480156101eb57600080fd5b506101bd6101fa366004611125565b610600565b34801561020b57600080fd5b5061018561021a3660046112ba565b61061b565b34801561022b57600080fd5b5061023f61023a3660046110d9565b61067b565b60405190815260200161013a565b34801561025957600080fd5b506101bd610701565b34801561026e57600080fd5b5061023f61027d366004611274565b805160208183018101805160078252928201919093012091525481565b3480156102a657600080fd5b506006546001600160a01b0316610185565b3480156102c457600080fd5b50610158610715565b3480156102d957600080fd5b506101bd6102e83660046111d9565b610724565b6101bd6102fb366004611274565b610733565b34801561030c57600080fd5b506101bd61031b366004611160565b610865565b34801561032c57600080fd5b5061015861033b3660046112ba565b61089d565b34801561034c57600080fd5b5061012e61035b3660046110f3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561039557600080fd5b506101bd6103a43660046110d9565b610911565b60006001600160e01b031982166380ac58cd60e01b14806103da57506001600160e01b03198216635b5e139f60e01b145b806103f557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461040a90611576565b80601f016020809104026020016040519081016040528092919081815260200182805461043690611576565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b60006104988261098a565b506000908152600460205260409020546001600160a01b031690565b60006104bf8261061b565b9050806001600160a01b0316836001600160a01b031614156105325760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054e575061054e813361035b565b6105c05760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610529565b6105ca83836109e9565b505050565b6105d93382610a57565b6105f55760405162461bcd60e51b8152600401610529906114b9565b6105ca838383610ad6565b6105ca83838360405180602001604052806000815250610865565b6000818152600260205260408120546001600160a01b0316806103f55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610529565b60006001600160a01b0382166106e55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610529565b506001600160a01b031660009081526003602052604090205490565b610709610c72565b6107136000610ccc565b565b60606001805461040a90611576565b61072f338383610d1e565b5050565b6007816040516107439190611316565b9081526020016040518091039020546000146107975760405162461bcd60e51b81526020600482015260136024820152726e616d6520616c72656164792065786973747360681b6044820152606401610529565b6008546040516000916001600160a01b031690633a9151b09033906107c0908690602001611361565b6040516020818303038152906040526040518363ffffffff1660e01b81526004016107ec929190611430565b602060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e91906112d2565b9050806007836040516108519190611316565b908152604051908190036020019020555050565b61086f3383610a57565b61088b5760405162461bcd60e51b8152600401610529906114b9565b61089784848484610ded565b50505050565b60606108a88261098a565b60006108bf60408051602081019091526000815290565b905060008151116108df576040518060200160405280600081525061090a565b806108e984610e20565b6040516020016108fa929190611332565b6040516020818303038152906040525b9392505050565b610919610c72565b6001600160a01b03811661097e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610529565b61098781610ccc565b50565b6000818152600260205260409020546001600160a01b03166109875760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610529565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a1e8261061b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a638361061b565b9050806001600160a01b0316846001600160a01b03161480610aaa57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ace5750836001600160a01b0316610ac38461048d565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ae98261061b565b6001600160a01b031614610b4d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610529565b6001600160a01b038216610baf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610529565b610bba6000826109e9565b6001600160a01b0383166000908152600360205260408120805460019290610be3908490611533565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c11908490611507565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610529565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610d805760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610529565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610df8848484610ad6565b610e0484848484610f3a565b6108975760405162461bcd60e51b815260040161052990611467565b606081610e445750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610e6e5780610e58816115b1565b9150610e679050600a8361151f565b9150610e48565b60008167ffffffffffffffff811115610e9757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ec1576020820181803683370190505b5090505b8415610ace57610ed6600183611533565b9150610ee3600a866115cc565b610eee906030611507565b60f81b818381518110610f1157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610f33600a8661151f565b9450610ec5565b60006001600160a01b0384163b1561103c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f7e9033908990889088906004016113f3565b602060405180830381600087803b158015610f9857600080fd5b505af1925050508015610fc8575060408051601f3d908101601f19168201909252610fc591810190611258565b60015b611022573d808015610ff6576040519150601f19603f3d011682016040523d82523d6000602084013e610ffb565b606091505b50805161101a5760405162461bcd60e51b815260040161052990611467565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ace565b506001949350505050565b600067ffffffffffffffff808411156110625761106261160c565b604051601f8501601f19908116603f0116810190828211818310171561108a5761108a61160c565b816040528093508581528686860111156110a357600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146110d457600080fd5b919050565b6000602082840312156110ea578081fd5b61090a826110bd565b60008060408385031215611105578081fd5b61110e836110bd565b915061111c602084016110bd565b90509250929050565b600080600060608486031215611139578081fd5b611142846110bd565b9250611150602085016110bd565b9150604084013590509250925092565b60008060008060808587031215611175578081fd5b61117e856110bd565b935061118c602086016110bd565b925060408501359150606085013567ffffffffffffffff8111156111ae578182fd5b8501601f810187136111be578182fd5b6111cd87823560208401611047565b91505092959194509250565b600080604083850312156111eb578182fd5b6111f4836110bd565b915060208301358015158114611208578182fd5b809150509250929050565b60008060408385031215611225578182fd5b61122e836110bd565b946020939093013593505050565b60006020828403121561124d578081fd5b813561090a81611622565b600060208284031215611269578081fd5b815161090a81611622565b600060208284031215611285578081fd5b813567ffffffffffffffff81111561129b578182fd5b8201601f810184136112ab578182fd5b610ace84823560208401611047565b6000602082840312156112cb578081fd5b5035919050565b6000602082840312156112e3578081fd5b5051919050565b6000815180845261130281602086016020860161154a565b601f01601f19169290920160200192915050565b6000825161132881846020870161154a565b9190910192915050565b6000835161134481846020880161154a565b83519083019061135881836020880161154a565b01949350505050565b6c021a922a0aa22902a20a126229609d1b81526000825161138981600d85016020870161154a565b7f5f33313333372028696e742069642c20737472696e67206e616d652c20737472600d9390910192830152507f696e67206465736372697074696f6e2c20737472696e672065787465726e616c602d820152665f6c696e6b293b60c81b604d820152605401919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611426908301846112ea565b9695505050505050565b6001600160a01b0383168152604060208201819052600090610ace908301846112ea565b60208152600061090a60208301846112ea565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6000821982111561151a5761151a6115e0565b500190565b60008261152e5761152e6115f6565b500490565b600082821015611545576115456115e0565b500390565b60005b8381101561156557818101518382015260200161154d565b838111156108975750506000910152565b600181811c9082168061158a57607f821691505b602082108114156115ab57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115c5576115c56115e0565b5060010190565b6000826115db576115db6115f6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461098757600080fdfea26469706673582212203fb06fb27280b4d19ff3f7da4b174e0aa5c41ea69df97ec46af82a90055ef70864736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class TestCreateFromContract__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(registry, overrides) {
        return super.deploy(registry, overrides || {});
    }
    getDeployTransaction(registry, overrides) {
        return super.getDeployTransaction(registry, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestCreateFromContract__factory = TestCreateFromContract__factory;
TestCreateFromContract__factory.bytecode = _bytecode;
TestCreateFromContract__factory.abi = _abi;
//# sourceMappingURL=TestCreateFromContract__factory.js.map