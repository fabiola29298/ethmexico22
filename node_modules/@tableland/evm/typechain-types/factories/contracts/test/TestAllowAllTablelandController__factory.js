"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestAllowAllTablelandController__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "getPolicy",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "allowInsert",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "allowUpdate",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "allowDelete",
                        type: "bool",
                    },
                    {
                        internalType: "string",
                        name: "whereClause",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "withCheck",
                        type: "string",
                    },
                    {
                        internalType: "string[]",
                        name: "updatableColumns",
                        type: "string[]",
                    },
                ],
                internalType: "struct ITablelandController.Policy",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506103f9806100206000396000f3fe60806040526004361061001e5760003560e01c80633791dc6a14610023575b600080fd5b610036610031366004610222565b61004c565b60405161004391906102ab565b60405180910390f35b6040805160c0810182526000808252602082018190529181019190915260608082018190526080820181905260a08201526040805160c08101825260018082526020820181905291810191909152606081016100dd60005b6040519080825280602002602001820160405280156100d757816020015b60608152602001906001900390816100c25790505b5061012f565b81526020016100ec60006100a4565b8152602001600060405190808252806020026020018201604052801561012657816020015b60608152602001906001900390816101115790505b50905292915050565b60608060005b835181101561021b5783818151811061015e57634e487b7160e01b600052603260045260246000fd5b6020026020010151516000141561017457610209565b8151156101bd57816040518060400160405280600581526020016401030b732160dd1b8152506040516020016101ab92919061027c565b60405160208183030381529060405291505b818482815181106101de57634e487b7160e01b600052603260045260246000fd5b60200260200101516040516020016101f792919061027c565b60405160208183030381529060405291505b806102138161039c565b915050610135565b5092915050565b600060208284031215610233578081fd5b81356001600160a01b0381168114610249578182fd5b9392505050565b6000815180845261026881602086016020860161036c565b601f01601f19169290920160200192915050565b6000835161028e81846020880161036c565b8351908301906102a281836020880161036c565b01949350505050565b6000602080835283511515818401528084015115156040840152604084015115156060840152606084015160c060808501526102ea60e0850182610250565b90506080850151601f19808684030160a08701526103088383610250565b60a0880151878203830160c089015280518083529194508501925084840190600581901b85018601875b8281101561035e578487830301845261034c828751610250565b95880195938801939150600101610332565b509998505050505050505050565b60005b8381101561038757818101518382015260200161036f565b83811115610396576000848401525b50505050565b60006000198214156103bc57634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220cf85b54822f824a92b8ad1089614420024d7bc45f82a285bc5d717272dd63a2364736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class TestAllowAllTablelandController__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestAllowAllTablelandController__factory = TestAllowAllTablelandController__factory;
TestAllowAllTablelandController__factory.bytecode = _bytecode;
TestAllowAllTablelandController__factory.abi = _abi;
//# sourceMappingURL=TestAllowAllTablelandController__factory.js.map